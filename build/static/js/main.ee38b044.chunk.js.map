{"version":3,"sources":["Whiteboard.js","App.js","reportWebVitals.js","index.js"],"names":["Whiteboard","props","wt","useEffect","window","api","WhiteboardTeam","clientId","client_id","boardCode","code","style","width","height","id","onClick","getCurrentUser","then","user","console","log","App","useState","setClientID","setCode","submitted","setSubmitted","type","onChange","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAEO,SAASA,EAAWC,GAEzB,IAAIC,EAAK,KAETC,qBAAU,WACRD,EAAK,IAAIE,OAAOC,IAAIC,eAAe,gBAAiB,CAClDC,SAAUN,EAAMO,UAChBC,UAAWR,EAAMS,SAElB,IASH,OACE,sBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAApC,UACE,qBAAKF,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAAUC,GAAG,iBACjD,wBAAQC,QAVI,WACL,MAANb,GACDA,EAAGc,iBACAC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,OAO5B,uBCoBSG,MAxCf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAENf,EAFM,KAEIgB,EAFJ,OAGWD,mBAAS,IAHpB,mBAGNZ,EAHM,KAGAc,EAHA,OAIqBF,oBAAS,GAJ9B,mBAING,EAJM,KAIKC,EAJL,KAoBb,OAAO,8BAELD,EAEE,8BACE,cAACzB,EAAD,CAAYQ,UAAWD,EAAUG,KAAMA,MAG1C,gCACG,+CACA,uBAAOiB,KAAK,OAAOC,SAvBF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxBN,EAAYM,EAAOC,UAuBf,2CACA,uBAAOH,KAAK,OAAOC,SArBN,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnBL,EAAQK,EAAOC,UAqBX,wBAAQf,QAlBO,WACnBW,GAAa,IAiBT,0BCxBOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ee38b044.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\nexport function Whiteboard(props) {\r\n\r\n  let wt = null;\r\n\r\n  useEffect(() => {\r\n    wt = new window.api.WhiteboardTeam('#wt-container', {\r\n      clientId: props.client_id,\r\n      boardCode: props.code\r\n    });\r\n  }, [])\r\n\r\n  const getUser = () => {\r\n    if(wt != null){\r\n      wt.getCurrentUser()\r\n        .then(user => console.log(user));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{width: \"100%\", height: \"100%\"}}>\r\n      <div style={{width: \"100%\", height: \"600px\"}} id=\"wt-container\"></div>\r\n      <button onClick={getUser}>Click!</button>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\nimport { Whiteboard } from './Whiteboard'; \n\nfunction App() {\n\n  const [clientId, setClientID] = useState('');\n  const [code, setCode] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n\n  const handleClientID = ({ target }) => {\n    setClientID(target.value)\n  }\n\n  const handleCode = ({target}) => {\n    setCode(target.value)\n  }\n\n  const handleSubmit = () => {\n    setSubmitted(true)\n  }\n\n\n  return(<div>\n    {\n    submitted\n     ?\n      <div>\n        <Whiteboard client_id={clientId} code={code}/>\n      </div>\n     :\n     <div>\n        <label>ClientID: </label>\n        <input type=\"text\" onChange={handleClientID} />\n        <label>Code: </label>\n        <input type=\"text\" onChange={handleCode}/>\n        <button onClick={handleSubmit}>Submit</button>\n      </div>\n    }\n</div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}